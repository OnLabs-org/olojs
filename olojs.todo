

Documentation:
    ✔ write documentation for config.md @done(2020-01-18) @project(Documentation)
    ✔ write documentation for stdlib.md  @done(2020-01-18) @project(Documentation)
    ✔ review documentation @done(2020-01-18) @project(Documentation)
    ✔ commit @done(2020-01-18) @project(Documentation)

Static globals:
    ✔ Temporarly remove custom globals because it is not possible to serve them via HTTP.     @done(2020-01-19) @project(Static globals)
    ✔ Commit @done(2020-01-19) @project(Static globals)

Rename config:
    ✔ Rename olojs.config.js to olojs-config.js     @done(2020-01-19) @project(Rename config)
    ✔ Commit @done(2020-01-19) @project(Rename config)
    
Load via HTTP:
    ✔ Implement support for paths starting with `http://` or `https://` in `environment.fetch` @done(2020-01-19) @project(Load via HTTP)
    ✔ Test fetching, loading and importing documents via HTTP @done(2020-01-19) @project(Load via HTTP)
    ✔ Check if the documentation is still up to date @done(2020-01-19) @project(Load via HTTP)
    ☐ Commit
    
HTTP Server:
    ☐ http-server: caricare client files (html, css e js) una volta per tutte all'inizio dello script 
    ☐ impostare un meccanismo che consenta di caricare files ogni volta in development mode
    ☐ Find a way to identify olo-documents requests and pass on other files requests
    ☐ Update documentation
    ☐ Commit

CLI Test:
    ☐ Automate CLI testing
    ☐ Commit
    
Publish v0.5.0:
    ✔ Update version @done(2020-01-17) @project(Push)
    ☐ Cleanup unused files
    ☐ Hide docgen from bin to uncommittable folder
    ☐ npm publish --access=public
    ☐ build with webpack
    ☐ Install olojs globally and test if it works

Docgen:
    ☐ implement docgen command
    ☐ comment environment.js, document.js and expression.js
    ☐ generate API documentation
    ☐ link the documentation in README.md
    ☐ Commit

    
    
